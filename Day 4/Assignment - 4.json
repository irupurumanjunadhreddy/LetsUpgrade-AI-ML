{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a complex no 8+16j\n",
      "Enter another complex no2+4j\n",
      "addition of complex no's  (10+20j)\n",
      "subtraction of complex no's  (6+12j)\n",
      "multiplication of complex no's  (-48+64j)\n",
      "division of complex no's  (4+0j)\n"
     ]
    }
   ],
   "source": [
    "a=complex(input(\"Enter a complex no \"))\n",
    "b=complex(input(\"Enter another complex no\"))\n",
    "print(\"addition of complex no's \",a+b)\n",
    "print(\"subtraction of complex no's \",a-b)\n",
    "print(\"multiplication of complex no's \",a*b)\n",
    "print(\"division of complex no's \",a/b)\n",
    "# we can not perform floor division and modulo division on complex numbers."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "range() is a function which is used to return a sequence of numbers starting from 0(default) and increment by 1.\n",
    "The Syntax : range(start,stop,step)\n",
    "start is default with 0, stop is required to end the sequence at required point and step value is increement value (default 1)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25\n",
      "5\n",
      "5.0\n"
     ]
    }
   ],
   "source": [
    "a=int(input())\n",
    "b=int(input())\n",
    "if(a-b>25):\n",
    "    print(a*b)\n",
    "else:\n",
    "    print(a/b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "14\n",
      "34\n",
      "62\n",
      "98\n"
     ]
    }
   ],
   "source": [
    "n=[1,2,3,4,5,6,7,8,9,10]\n",
    "for i in n:\n",
    "    if(i%2==0):\n",
    "        print(i*i-2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28  \n",
      "52  \n",
      "33  \n",
      "21  \n",
      "99  \n",
      "34  \n",
      "55  \n"
     ]
    }
   ],
   "source": [
    "n=[6,28,52,33,7,21,7,99,34,55]\n",
    "for i in n:\n",
    "    if(i/2>7):\n",
    "        print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
